name: Update ECR Repository
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀

# 手動事項
on: workflow_dispatch

# id-token: write はGitHubのOIDC プロバイダから発行されるトークンを利用するために必要になる
# permissions を書くと他の contents: read のようなデフォルトで有効になってる権限も無効になってしまうため明示的に書く必要あり
permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 300
    steps:
      - uses: actions/checkout@v3

      # aws-actions/configure-aws-credentials: AWS 公式のアクションで、他に認証情報を渡さなければ自動で OIDC トークンを使用してくれる。
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::712412581856:role/githubActionsUpdateECR_forLearning
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: php-application
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

#      - name: Render Amazon ECS task definition
#        id: render-container
#        uses: aws-actions/amazon-ecs-render-task-definition@v1
#        with:
#          task-definition: aws/task-definition.json
#          container-name: {対象のコンテナ名}
#          image: ${{ steps.build-image.outputs.image }}
#
#      - name: Deploy to Amazon ECS service
#        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#        with:
#          task-definition: ${{ steps.render-container.outputs.task-definition }}
#          service: {対象のECSサービス名}
#          cluster: {対象のECSクラスタ名}